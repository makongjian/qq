0014讨论内容：
后面那个我好像明白了。。。是树的规模，我错误理解成树高了
不经过C，A的高度不变。经过C，A的高度也不变..
@无忌 好像我又理解了。同学你再看一下，只对x做操作，A通往最深后代的通路不经过C的话，A的高度好像是没变 ――by：可爱至极小鲁酱<lylylulu@qq.com>
你说的有道理，我刚刚翻了一下教材PDF，仔细看了一下前文，是更新插入删除节点后的各节点高度，那他的说法是正确的，之前我把这个题当作简单的求树的高度了。@可爱至极小鲁酱  ――by：无忌 好
嗯嗯，那问题就解决了~谢谢你。我自己也理解了 ――by：可爱至极小鲁酱<lylylulu@qq.com>
―――――――――――――――――――――――――――――――――――――――――――


0013  答案：A RAID0
RAID0速度最快，但是没有容错能力

―――――――――――――――――――――――――――――――――――――――――――
0012  答案： B 9次
解题过程：
页面    0     3    2     0    1    3    4    3    1     0    3    2     1     3     4    
物 0     10  10  10  10  10  10 14  14  14  14  14  04  11  11  11
理 1           13  13  13  13  13  03  13  13  03  13  03  03  13  13
页 2                  12  12  12  12  02  02  02  10  10  00  00  00  14
帧 3                                11  11  11  11  11  11  11  12  12  12  12
缺页    ・     ・      ・             ・            ・                  ・            ・       ・            ・

―――――――――――――――――――――――――――――――――――――――――――
0011 
这个教材版本问题不错，有一定迷惑性。就作为今天的第三个群内问题好了，希望大家讨论过后，形成一致共识。
我先说一下我掌握的信息
1.《数据结构第三版 》邓俊辉老师
2.《数据结构习题解析》 邓俊辉老师
这两本绿皮的不用说的，清本教材也是912参考教材
3.《数据结构 用面向对象方法与c＋＋语言描述  》殷人昆老师  共512页。（有紫色皮有蓝绿皮两种。封皮不一样，内容一致）第二版  isbn 9787302148111 
4.《数据结构习题解析 第二版 》殷人昆老师 463页（有紫色皮有蓝绿皮两种。封皮不一样，内容一致）  isbn  9787302243922
2是1配套习题解
4是3配套习题解

问题，殷人昆老师c需要版本的那本书是配套哪本书的？配套严蔚敏老师吗？还是独立的一本书？还是。。？  请有详细了解的同学说问一下
我目前在用的除了邓俊辉老师的1-2书，就是殷人昆老师的3-4书。是一个很好的补充
@20老学渣 看样子你们发的两本殷人昆老师c语言版本的应该是第一版第二版的关系
不过是配套哪一本书？还是单独成册？
我的计划是王道配套殷人昆老师c＋＋习题解答
邓老师为主，清本教材。  我个人殷人昆老师为辅。  不是强求的
大家还有好的建议吗？  殷人昆老师c？李春褒老师？ 还是数据结构1800？
  ――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――
0010 答案：D 6次
解题过程如下：

页面   0 1 2 0 1 3 0 3 1 0 3     
物 0    0 1 2 2 2 3 0 0 1 1 1
理 1       0 1 1 1 2 3 3 0 0 0
帧 2           0 0 0 1 2 2 3 3 3
缺页   ・  ・  ・          ・  ・     ・

―――――――――――――――――――――――――――――――――――――――――――
0009 答案：B 进栈


―――――――――――――――――――――――――――――――――――――――――――


0008  本题答案A；下面是 针对于选项Ⅱ的讨论：
@TV 邓老师在mooc的表述是举例O(n^3)在某个小区间内可能会大于O(2^n)，但从渐进的层面分析在某个时间点以后。O(2^n)会迅速超越O(n^3)。重要强调要从渐进的层面、从长远的角度分析复杂度。不过，这题选项Ⅱ给出的O(2^n)、O(n)似乎并不存在这样的“小区间”使得O(n)的图像在O(2^n)上方。    ――by：群主(289212182)

大O记号是渐进分析，表示一种渐进的估算，而渐进考虑趋势，还有n足够大的情况。所以我认为，题目里，应该是默认了n趋向足够大了；不需要考虑当n很小的时候2∧n＜n的情况；    ――by：可爱至极小鲁酱<lylylulu@qq.com>

我的理解是有两个概念， 一个是时间复杂度T(n)，一个是渐进时间复杂度O(n)；一半书上介绍完这两个概念会说，以后不加区分，O(n)就是时间复杂度了。 但实际上是两个概念，因为计算时间复杂度T(n)的时候需要用数学知识求出详细的表达式、系数常数项一个都不能少。 而O(n)只考虑最大次项，从渐进、长远的角度分析。    ――by：群主(289212182)

emm- -但是这里写了大O，为什么还要考虑系数和常数项；但是一般计算时间复杂度T(n)最后一般也都会用大O表示；我不太知道，这两个概念需要区分得这么明确吗..不过课本上是有通过考虑常系数优化的例子，就是向量二分查找和fib查找那里。    ――by：可爱至极小鲁酱<lylylulu@qq.com>

我感觉只具有理论意义吧，因为不是每个程序都能详细求出T(n)表达式，第一这需要很强的数学功底，级数求和之类的，第二有些程序很复杂根本无法表示成具体函数式。所以这种理论意义仅限于数学家或者计算机科学家研究使用。咱们把主要精力放在大O渐进时间复杂度上，不过分分散精力于数学，而且程序的大O数量级一般很容易确定（殷人昆老师教材上的表述是：大O一般一眼就能看出来）。     ――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――

0007  
重新本阅读群公告和github
――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――


0006
1  实；   2  GDT；   3 保护
――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――


0005
C.RPL  
（彩蛋：学堂在线视频后练习题这题答案错误，误选A.  DPL。）
（答案出处：操作系统ucore实验指导书pdf版 p112）
――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――


0004
C，因为根据课本上归并排序的定义，0＜＝lo＜hi＜＝size。如果要把四个元素全部进行排序，应该从0开始，hi应该指向最后一个元素之后的位置，且hi-lo刚好等于元素个数。
（答案出处：邓俊辉老师教材，第二章关于向量Vector类的定义代码、mergeSort归并排序实现代码、群内同学优质回复）
 ――by：可爱至极小鲁酱<lylylulu@qq.com>
―――――――――――――――――――――――――――――――――――――――――――


0003
截取sign.c文件中的部分源码

  ：
 
char buf[512];                                     //定义buf数组
    
memset(buf, 0, sizeof(buf));
     
                                                               // 把buf数组的最后两位置为 0x55, 0xAA
    
buf[510] = 0x55;  
    
buf[511] = 0xAA;
    
FILE *ofp = fopen(argv[2], "wb+");
    
size = fwrite(buf, 1, 512, ofp);
   
 if (size != 512) {                                  //大小为512字节
   
    fprintf(stderr, "write '%s' error, 
  
            size is %d.\n", argv[2], size);
  
    return -1;
    }  

主引导扇区的规则如下：

1 大小为512字节
  
2 多余的空间填  

3 第510个（倒数第二个）字节是0x55，  

4 第511个（倒数第一个）字节是0xAA。
（答案出处：操作系统ucore实验指导书）
――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――


0002
当字符集规模较小时，单次比对的成功概率较高，蛮力算法的效率较低。此时，KMP算法稳定的线性复杂度，更能体现出优势。当字符集规模较大时KMP算大与蛮力算法相当。

（答案出处：数据结构习题解析第三版(邓俊辉老师)_p218_11-10）
――by：群主(289212182)
―――――――――――――――――――――――――――――――――――――――――――


0001
讨论1：物理地址（――by：Crowerly）

讨论2：[pic]这是 entry.s 的代码；这是系统头一次初始化页目录表和二级页表的地方；[pic]这是我在pmm_init中的测试 ；最新的代码对于entry.s有所修改 但是基本一样；@nullptr ；二级页表的物理地址基本是通过循环迭代算出来的；那个_boot_pt1 就是代表了一个二级页表的地址；抱歉 是我的问题 他调用了realloc 就是物理地址（――by：&你的心link我的心）

讨论3：@&你的心link我的心  同学 页目录如果存的是虚拟地址，那还怎么定位二级页表的页啊（――by：Crowerly）

讨论4★：“CPU可以看到的地址都是虚拟地址，经过MMU后才会有物理地址。@Crowerly 定位二级页表的事由MMU做。”（――by：向老师）

讨论5：@向老师 老师 页表就是用来给MMU做地址翻译的啊，如果一级页表里头存的是虚拟地址，MMU就无法定位二级页表的位置了吧；我再回去确认一下吧；（――by：Crowerly）

讨论6：其实 你们说的就是对的；代码是通过realloc一个简单的减法；实现了物理地址和虚拟地址的转换；老师的意思是强调CPU拿到的地址是虚拟地址；我们讨论的地址是mmu看到的地址；页表也是由mmu来实现的；不冲突；我声明我观点的错误 因为没有看到realloc；页目录表和二级页表都是存储的物理地址包括cr3 代码中均有体现；所站视角不同；（――by：&你的心link我的心）

讨论7：@某普通大学的数学汪  仔细捋了捋代码，确实是物理地址，书上也写了是物理地址（――by：nullptr）

讨论8★：也就是说根据线性地址生成最终物理地址的工作由MMU完成。cpu拿到的第一手地址都是虚拟地址，由分段机制生成线性地址，若不启动分页则线性地址就是最终物理地址，若启用分页机制则再对线性地址进行加工。 所以页表的地址是物理地址还是虚拟地址哇？（――by：群主289212182）

讨论9：cr3有页目录表物理地址，然后查找到存放的页表物理地址，然后从页表查到物理页号和offset拼起来，应该是这样吧?（――by：null）

讨论10★：我突然想起来一件事情；咱们访问必须是32位地址。页目录项给的所谓"物理地址"是这种可以直接拿来不做任何变化访存的地址吗？；如果不是，mmu必须对它进行变换，那所谓的"物理地址"也就不是真正的物理地址鸭？；能这样理解吗？轻喷。（――by：群主289212182）



讨论11：页目录存的是物理页框号；确实不是真的物理地址；真的物理地址需要做12位左移位。（――by：Crowerly）

讨论12★：是吧？我觉得所有的访存工作都是mmu在做，cpu并不知情，它俩谁也不认识谁；个人粗俗理解（――by：群主289212182）

讨论13：...（若干）

讨论14★：“我注意到大家对虚拟地址和物理地址的讨论。这是操作系统课的重要概念，需要仔细理解代码才能有准确的了解。有必要进行深入的讨论。
我先说说我的理解。
1. 在保护模式下CPU可以看到的地址都是虚拟地址，经过MMU后才会有物理地址。定位二级页表的事由MMU做。所以，CPU不能直接用物理地址来访问内存，而必须使用虚拟地址来访问。这时才有，CPU要修改页表项内容时，也是通过虚拟地址来访问的。
2. 在X86-32 CPU上，物理地址可能不是32位的。如在使用物理地址扩展（PAE）时，物理地址会是36位，使用4KB页面大小时物理页号也就变成了24位，于是一个页表项就占了8字节。
3. CR3寄存器中保存的是页目录的起始物理地址，CPU只在地址转换中使用它的内容。
请同学们继续置疑和修正描述，并补充相关的代码例证。希望有同学来整理大家的交流结果，并放到Piazza上，以方便以后的同学。谁有兴趣来做此事？”（――by：向老师）
―――――――――――――――――――――――――――――――――――――――――――
